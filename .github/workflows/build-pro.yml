# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build development enviroment

on:
  push:
    tags:
      - '*.*.*'

jobs:
  prepare-env:
    runs-on: ubuntu-latest
    name: Prepare enviroment
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: prepare enviroment
        uses: boiling-js/boiling/.github/actions/prepare-env@master

  build-win-app:
    needs: [prepare-env]
    name: Build Windows app
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: prepare enviroment
        uses: boiling-js/boiling/.github/actions/prepare-env@master
      - name: build win app
        run: yarn build:app -w
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-windows
          path: ./packages/electron/release/boiling-${{ github.ref }}.exe

  build-mac-app:
    needs: [prepare-env]
    name: Build MacOS app
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: prepare enviroment
        uses: boiling-js/boiling/.github/actions/prepare-env@master
      - name: build win app
        run: yarn build:app -m
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-windows
          path: ./packages/electron/release/boiling-${{ github.ref }}.dmg

  package-frontend:
    needs: [prepare-env]
    name: Package Frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: prepare enviroment
        uses: boiling-js/boiling/.github/actions/prepare-env@master
      - name: Build utils
        run: yarn workspace @boiling/utils build
      - name: Build frontend
        run: yarn f build
      - name: Tar dist
        run: tar -cvf frontend-pack-dist.tar ./packages/frontend/dist
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend-pack-dist
          path: frontend-pack-dist.tar

  upload-frontend:
    needs: [package-frontend]
    name: Upload Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: frontend-pack-dist
      - name: Untar frontend-pack-dist
        run: mkdir dist && tar -xvf frontend-pack-dist.tar dist
      - name: rsync deployments
        uses: boiling-js/boiling/.github/actions/rsync@master
        with:
          path: dist/
          remote-path: /www/dist/
          host: ${{ secrets.PRO_HOST }}
          user: developer
          pem: ${{ secrets.PRO_PEM }}
          pem-type: ssh-ed25519
